<template>
  <div class="main-container">
    <!-- Sliding Sidebar -->
    <div class="sidebar" :class="{ 'sidebar--active': isSidebarActive }">
      <ul>
        <li @click="navigateTo('/home')">Home</li>
        <li @click="navigateTo('/attendance')">Attendance</li>
        <li @click="navigateTo('/members')">Members</li>
      </ul>
    </div>

    <!-- Content Area -->
    <div class="content">
      <button @click="toggleSidebar" class="toggle-btn">â˜° Toggle Sidebar</button>
      <router-view></router-view> <!-- This will load the selected page -->
    </div>
  </div>
</template>

<script>
export default {
  data() {
    return {
      isSidebarActive: false,  // Controls whether the sidebar is open or not
    };
  },
  methods: {
    toggleSidebar() {
      this.isSidebarActive = !this.isSidebarActive; // Toggle the sidebar visibility
    },
    navigateTo(path) {
      this.$router.push(path); // Push the path directly
    },
  },
};
</script>

<style scoped>
/* Main container with sidebar and content */
.main-container {
  display: flex;
  min-height: 100vh;
}

/* Sidebar styles */
.sidebar {
  width: 250px;
  background-color: #333;
  color: white;
  padding: 20px;
  position: fixed;
  left: -250px; /* Hidden initially */
  top: 0;
  bottom: 0;
  transition: all 0.3s;
}

/* Sidebar active class for sliding */
.sidebar--active {
  left: 0;
}

/* Menu items in sidebar */
.sidebar ul {
  list-style-type: none;
  padding: 0;
}

.sidebar ul li {
  padding: 15px 0;
  cursor: pointer;
  transition: background-color 0.3s;
}

.sidebar ul li:hover {
  background-color: #575757;
}

/* Content area next to sidebar */
.content {
  margin-left: 250px; /* Leave space for the sidebar */
  padding: 20px;
  width: 100%;
  transition: margin-left 0.3s;
}

/* Shift content to the left when sidebar is hidden */
.sidebar--active ~ .content {
  margin-left: 0;
}

/* Toggle button for the sidebar */
.toggle-btn {
  background-color: #333;
  color: white;
  padding: 10px 20px;
  border: none;
  cursor: pointer;
  margin-bottom: 20px;
}

.toggle-btn:hover {
  background-color: #575757;
}
</style>





body {
 
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10px;
  background: linear-gradient(135deg, #71b7e6, #9b59b6);
  
}

this is for home page

<template>
<router-view></router-view>
<div class = "home-B">
 <input type="checkbox" id="check">
    <label for="check">
      <i class="fas fa-bars" id="btn"></i>
      <i class="fas fa-times" id="cancel"></i>
    </label>
    <div class="sidebar">
    
    
      <a href="#" class="active">
      <router-link to="/login">
        <i class="fas fa-qrcode"></i>
        <span>Dashboard</span>
        </router-link>
      </a>
   

      <a href="#">
      <router-link to="/login">
        <i class="fas fa-link"></i>
        <span>Attendance</span>
        </router-link>
      </a>

      <a href="#">
      <router-link to="/login">
        <i class="fas fa-stream"></i>
        <span>Members</span>
        </router-link>
      </a>

      <a href="#">
      <router-link to="/login">
         <i class="fas fa-calendar"></i>
        <span>Reports</span>
        </router-link>
      </a>
      
    </div>


<div class="half-page-bg"></div>

    
    
   </div> 
   
</template>

<script>
export default {
  data() {
    return {
      isSidebarActive: false,  // Controls whether the sidebar is open or not
    };
  },
  methods: {
    toggleSidebar() {
      this.isSidebarActive = !this.isSidebarActive; // Toggle the sidebar visibility
    },
    navigateTo(path) {
      this.$router.push(path); // Push the path directly
    },
  },
};
</script>

<style scoped>
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}


.home-B {
    background-image: url(@/assets/desktop-wallpaper-for-pc-nature-cool.jpg);
	
  height: 649px;
 
}


.sidebar{
  position: fixed;
  width: 240px;
  left: -240px;
  height: 100%;
  background-color: #fff;
  transition: all .5s ease;
  top: 0px;
}
.sidebar header{
  font-size: 28px;
  color: #353535;
  line-height: 70px;
  text-align: center;
  background-color: #fff;
  user-select: none;
  font-family: 'Lato', sans-serif;
}
.sidebar a{
  display: block;
  height: 65px;
  width: 100%;
  color: #353535;
  line-height: 65px;
  padding-left: 10px;
  box-sizing: border-box;
  border-left: 5px solid transparent;
  font-family: 'Lato', sans-serif;
  transition: all .5s ease;
}
a.active,a:hover{
  border-left: 5px solid var(--accent-color);
  color: #fff;
   background: linear-gradient(to left, var(--accent-color), var(--gradient-color));
}
.sidebar a i{
  font-size: 23px;
  margin-right: 16px;
}
.sidebar a span{
  letter-spacing: 1px;
  text-transform: uppercase;
}
#check{
  display: none;
}
label #btn,label #cancel{
  position: absolute;
  left: 5px;
  cursor: pointer;
  color: #d6adff;
  border-radius: 5px;
  margin: 15px 30px;
  font-size: 29px;
  background-color: #e8d1ff;
  box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5),
    inset -7px -7px 10px 0px rgba(0,0,0,.1),
   3.5px 3.5px 20px 0px rgba(0,0,0,.1),
   2px 2px 5px 0px rgba(0,0,0,.1);
  height: 45px;
  width: 45px;
  text-align: center;
  text-shadow: 2px 2px 3px rgba(255,255,255,0.5);
  line-height: 45px;
  transition: all .5s ease;
  top: 7px;
}
label #cancel{
  opacity: 0;
  visibility: hidden;
}
#check:checked ~ .sidebar{
  left: 0;
}
#check:checked ~ label #btn{
  margin-left: 245px;
  opacity: 0;
  visibility: hidden;
}
#check:checked ~ label #cancel{
  margin-left: 245px;
  opacity: 1;
  visibility: visible;
}
@media(max-width : 860px){
  .sidebar{
    height: auto;
    width: 70px;
    left: 0;
    margin: 100px 0;
  }
  header,#btn,#cancel{
    display: none;
  }
  span{
    position: absolute;
    margin-left: 23px;
    opacity: 0;
    visibility: hidden;
  }
  .sidebar a{
    height: 60px;
  }
  .sidebar a i{
    margin-left: -50px;
  }
  a:hover {
    width: 200px;
    background: inherit;
  }
  .sidebar a:hover span{
    opacity: 1;
    visibility: visible;
  }
}

.sidebar > a.active,.sidebar > a:hover:nth-child(even) {
  --accent-color: #52d6f4;
  --gradient-color: #c1b1f7;
}
.sidebar a.active,.sidebar > a:hover:nth-child(odd) {
  --accent-color: #c1b1f7;
  --gradient-color: #A890FE;
}


.frame {
  width: 50%;
  height: 30%;
  margin: auto;
  text-align: center;
}

h2 {
  position: relative;
  text-align: center;
  color: #353535;
  font-size: 60px;
  font-family: 'Lato', sans-serif;
  margin: 0;
  color: #a759f5;
}

p {
  font-family: 'Lato', sans-serif;
  font-weight: 300;
  text-align: center;
  font-size: 30px;
  color: #d6adff;
  margin: 0;
}



.half-page-bg {
    border-radius: 5%;
    position: fixed;
    left: -90px;
    height: 90vh;
    width: 450px;
    top: 280px;
    background-color: white;
    background-size: contain;
    background-position: center;
}

.other-page-bg {
    border-radius: 5%;
    position: fixed;
    left: 400px;
    height: 90vh;
    width: 450px;
    top: -300px;
    background-color: blue;
    
    background-size: contain;
    background-position: center;
}
</style>





home page 2


<template>
<router-view></router-view>

    <!-- navbar -->
    <nav class="navbar">
      <div class="logo_item">
        <i class="bx bx-menu" id="sidebarOpen"></i>
        <img src="images/logo.png" alt="">
      </div>
      <div class="search_bar">
        <input type="text" placeholder="Search" />
      </div>
      <div class="navbar_content">
        <i class="bi bi-grid"></i>
        <i class='bx bx-sun' id="darkLight"></i>
        <i class='bx bx-bell' ></i>
        <img src="images/profile.jpg" alt="" class="profile" />
      </div>
    </nav>

    
    <!-- sidebar -->
    <nav class="sidebar">
      <div class="menu_content">
        <ul class="menu_items">
          <div class="menu_title menu_dahsboard"></div>
          <!-- duplicate or remove this li tag if you want to add or remove navlink with submenu -->
          <!-- start -->
          <li class="item">
            <div href="#" class="nav_link submenu_item">
              <span class="navlink_icon">
                <i class="bx bx-home-alt"></i>
              </span>
              <span class="navlink">Home</span>
              <i class="bx bx-chevron-right arrow-left"></i>
            </div>
            <ul class="menu_items submenu">
              <a href="#" class="nav_link sublink">Nav Sub Link</a>
              <a href="#" class="nav_link sublink">Nav Sub Link</a>
              <a href="#" class="nav_link sublink">Nav Sub Link</a>
              <a href="#" class="nav_link sublink">Nav Sub Link</a>
            </ul>
          </li>
          <!-- end -->
          <!-- duplicate this li tag if you want to add or remove  navlink with submenu -->
          <!-- start -->
          <li class="item">
            <div href="#" class="nav_link submenu_item">
              <span class="navlink_icon">
                <i class="bx bx-grid-alt"></i>
              </span>
              <span class="navlink">Overview</span>
              <i class="bx bx-chevron-right arrow-left"></i>
            </div>
            <ul class="menu_items submenu">
              <a href="#" class="nav_link sublink">Nav Sub Link</a>
              <a href="#" class="nav_link sublink">Nav Sub Link</a>
              <a href="#" class="nav_link sublink">Nav Sub Link</a>
              <a href="#" class="nav_link sublink">Nav Sub Link</a>
            </ul>
          </li>
          <!-- end -->
        </ul>
        <ul class="menu_items">
          <div class="menu_title menu_editor"></div>
          <!-- duplicate these li tag if you want to add or remove navlink only -->
          <!-- Start -->
          <li class="item">
            <a href="#" class="nav_link">
              <span class="navlink_icon">
                <i class="bx bxs-magic-wand"></i>
              </span>
              <span class="navlink">Magic build</span>
            </a>
          </li>
          <!-- End -->
          <li class="item">
            <a href="#" class="nav_link">
              <span class="navlink_icon">
                <i class="bx bx-loader-circle"></i>
              </span>
              <span class="navlink">Filters</span>
            </a>
          </li>
          <li class="item">
            <a href="#" class="nav_link">
              <span class="navlink_icon">
                <i class="bx bx-filter"></i>
              </span>
              <span class="navlink">Filter</span>
            </a>
          </li>
          <li class="item">
            <a href="#" class="nav_link">
              <span class="navlink_icon">
                <i class="bx bx-cloud-upload"></i>
              </span>
              <span class="navlink">Upload new</span>
            </a>
          </li>
        </ul>
        <ul class="menu_items">
          <div class="menu_title menu_setting"></div>
          <li class="item">
            <a href="#" class="nav_link">
              <span class="navlink_icon">
                <i class="bx bx-flag"></i>
              </span>
              <span class="navlink">Notice board</span>
            </a>
          </li>
          <li class="item">
            <a href="#" class="nav_link">
              <span class="navlink_icon">
                <i class="bx bx-medal"></i>
              </span>
              <span class="navlink">Award</span>
            </a>
          </li>
          <li class="item">
            <a href="#" class="nav_link">
              <span class="navlink_icon">
                <i class="bx bx-cog"></i>
              </span>
              <span class="navlink">Setting</span>
            </a>
          </li>
          <li class="item">
            <a href="#" class="nav_link">
              <span class="navlink_icon">
                <i class="bx bx-layer"></i>
              </span>
              <span class="navlink">Features</span>
            </a>
          </li>
        </ul>
        <!-- Sidebar Open / Close -->
        <div class="bottom_content">
          <div class="bottom expand_sidebar">
            <span> Expand</span>
            <i class='bx bx-log-in' ></i>
          </div>
          <div class="bottom collapse_sidebar">
            <span> Collapse</span>
            <i class='bx bx-log-out'></i>
          </div>
        </div>
      </div>
    </nav>
</template>

<script>
const body = document.querySelector("body");
const darkLight = document.querySelector("#darkLight");
const sidebar = document.querySelector(".sidebar");
const submenuItems = document.querySelectorAll(".submenu_item");
const sidebarOpen = document.querySelector("#sidebarOpen");
const sidebarClose = document.querySelector(".collapse_sidebar");
const sidebarExpand = document.querySelector(".expand_sidebar");
sidebarOpen.addEventListener("click", () => sidebar.classList.toggle("close"));
sidebarClose.addEventListener("click", () => {
  sidebar.classList.add("close", "hoverable");
});
sidebarExpand.addEventListener("click", () => {
  sidebar.classList.remove("close", "hoverable");
});
sidebar.addEventListener("mouseenter", () => {
  if (sidebar.classList.contains("hoverable")) {
    sidebar.classList.remove("close");
  }
});
sidebar.addEventListener("mouseleave", () => {
  if (sidebar.classList.contains("hoverable")) {
    sidebar.classList.add("close");
  }
});
darkLight.addEventListener("click", () => {
  body.classList.toggle("dark");
  if (body.classList.contains("dark")) {
    document.setI
    darkLight.classList.replace("bx-sun", "bx-moon");
  } else {
    darkLight.classList.replace("bx-moon", "bx-sun");
  }
});
submenuItems.forEach((item, index) => {
  item.addEventListener("click", () => {
    item.classList.toggle("show_submenu");
    submenuItems.forEach((item2, index2) => {
      if (index !== index2) {
        item2.classList.remove("show_submenu");
      }
    });
  });
});
if (window.innerWidth < 768) {
  sidebar.classList.add("close");
} else {
  sidebar.classList.remove("close");
}

</script>

<style scoped>
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap");
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}
:root {
  --white-color: #fff;
  --blue-color: #4070f4;
  --grey-color: #707070;
  --grey-color-light: #aaa;
}
body {
  background-color: #e7f2fd;
  transition: all 0.5s ease;
}
body.dark {
  background-color: #333;
}
body.dark {
  --white-color: #333;
  --blue-color: #fff;
  --grey-color: #f2f2f2;
  --grey-color-light: #aaa;
}
/* navbar */
.navbar {
  position: fixed;
  top: 0;
  width: 100%;
  left: 0;
  background-color: var(--white-color);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 15px 30px;
  z-index: 1000;
  box-shadow: 0 0 2px var(--grey-color-light);
}
.logo_item {
  display: flex;
  align-items: center;
  column-gap: 10px;
  font-size: 22px;
  font-weight: 500;
  color: var(--blue-color);
}
.navbar img {
  width: 35px;
  height: 35px;
  border-radius: 50%;
}
.search_bar {
  height: 47px;
  max-width: 430px;
  width: 100%;
}
.search_bar input {
  height: 100%;
  width: 100%;
  border-radius: 25px;
  font-size: 18px;
  outline: none;
  background-color: var(--white-color);
  color: var(--grey-color);
  border: 1px solid var(--grey-color-light);
  padding: 0 20px;
}
.navbar_content {
  display: flex;
  align-items: center;
  column-gap: 25px;
}
.navbar_content i {
  cursor: pointer;
  font-size: 20px;
  color: var(--grey-color);
}
/* sidebar */
.sidebar {
  background-color: var(--white-color);
  width: 260px;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  padding: 80px 20px;
  z-index: 100;
  overflow-y: scroll;
  box-shadow: 0 0 1px var(--grey-color-light);
  transition: all 0.5s ease;
}
.sidebar.close {
  padding: 60px 0;
  width: 80px;
}
.sidebar::-webkit-scrollbar {
  display: none;
}
.menu_content {
  position: relative;
}
.menu_title {
  margin: 15px 0;
  padding: 0 20px;
  font-size: 18px;
}
.sidebar.close .menu_title {
  padding: 6px 30px;
}
.menu_title::before {
  color: var(--grey-color);
  white-space: nowrap;
}
.menu_dahsboard::before {
  content: "Dashboard";
}
.menu_editor::before {
  content: "Editor";
}
.menu_setting::before {
  content: "Setting";
}
.sidebar.close .menu_title::before {
  content: "";
  position: absolute;
  height: 2px;
  width: 18px;
  border-radius: 12px;
  background: var(--grey-color-light);
}
.menu_items {
  padding: 0;
  list-style: none;
}
.navlink_icon {
  position: relative;
  font-size: 22px;
  min-width: 50px;
  line-height: 40px;
  display: inline-block;
  text-align: center;
  border-radius: 6px;
}
.navlink_icon::before {
  content: "";
  position: absolute;
  height: 100%;
  width: calc(100% + 100px);
  left: -20px;
}
.navlink_icon:hover {
  background: var(--blue-color);
}
.sidebar .nav_link {
  display: flex;
  align-items: center;
  width: 100%;
  padding: 4px 15px;
  border-radius: 8px;
  text-decoration: none;
  color: var(--grey-color);
  white-space: nowrap;
}
.sidebar.close .navlink {
  display: none;
}
.nav_link:hover {
  color: var(--white-color);
  background: var(--blue-color);
}
.sidebar.close .nav_link:hover {
  background: var(--white-color);
}
.submenu_item {
  cursor: pointer;
}
.submenu {
  display: none;
}
.submenu_item .arrow-left {
  position: absolute;
  right: 10px;
  display: inline-block;
  margin-right: auto;
}
.sidebar.close .submenu {
  display: none;
}
.show_submenu ~ .submenu {
  display: block;
}
.show_submenu .arrow-left {
  transform: rotate(90deg);
}
.submenu .sublink {
  padding: 15px 15px 15px 52px;
}
.bottom_content {
  position: fixed;
  bottom: 60px;
  left: 0;
  width: 260px;
  cursor: pointer;
  transition: all 0.5s ease;
}
.bottom {
  position: absolute;
  display: flex;
  align-items: center;
  left: 0;
  justify-content: space-around;
  padding: 18px 0;
  text-align: center;
  width: 100%;
  color: var(--grey-color);
  border-top: 1px solid var(--grey-color-light);
  background-color: var(--white-color);
}
.bottom i {
  font-size: 20px;
}
.bottom span {
  font-size: 18px;
}
.sidebar.close .bottom_content {
  width: 50px;
  left: 15px;
}
.sidebar.close .bottom span {
  display: none;
}
.sidebar.hoverable .collapse_sidebar {
  display: none;
}
#sidebarOpen {
  display: none;
}
@media screen and (max-width: 768px) {
  #sidebarOpen {
    font-size: 25px;
    display: block;
    margin-right: 10px;
    cursor: pointer;
    color: var(--grey-color);
  }
  .sidebar.close {
    left: -100%;
  }
  .search_bar {
    display: none;
  }
  .sidebar.close .bottom_content {
    left: -100%;
  }
}
</style>




for authentication token

if (response.data.message === 'User login successful') {
          // Save token if your backend sends one for future authenticated requests
          localStorage.setItem('authToken', response.data.token);
          this.$router.push('/home'); // Navigate to home page upon successful login
        } else {
          alert('Invalid credentials');
        }




        for attendance page

        if (this.name.trim()) {
        const today = new Date().toLocaleDateString();
        this.attendanceList.push({ name: this.name, date: today });
        this.name = ''; // Clear the input field after marking attendance

        // Reset attendance flag after process completes
      setTimeout(() => {
        this.isMarkingAttendance = false;
      }, 500);

      } else {
        alert("Please enter a name.");
      }




      this.attendanceList.push({ name: response.data.Attendance.fullname, date: response.data.Attendance.date , attendanceStatus: response.data.Attendance.status});
      this.name = '';





      for image preview

      data() {
  return {
    imageUrl: null, // For holding the uploaded image URL
  };
},
methods: {
  handleImageUpload(event) {
    const file = event.target.files[0];
    if (file) {
      this.imageUrl = URL.createObjectURL(file); // Creates a local URL for the image
    }
  }
}
















<template>
  <div class="attendance-page">
    <!-- Sidebar -->
    <Sidebar />

    <!-- Main Content Area -->
    <div class="main-content">
      <Navbar />

      <h1>User Registration</h1>
      
      <form @submit.prevent="submitRegistration" class="registration-form">
        <!-- User Details -->
        <div v-if="step === 1" class = "first_info">
          

          <label class = "label_fn" for="firstName">First Name</label>
          <input class = "fn" type="text" v-model="form.firstName" id="firstName" placeholder="First Name" required />

          <label class = "label_ln" for="lastName">Last Name</label>
          <input  class = "ln" type="text" v-model="form.lastName" id="lastName" placeholder="Last Name" required />
         

          <label class = "label_pn" for="phoneNumber">Phone Number</label>
          <input class = "pn" type="text" v-model="form.phoneNumber" id="phoneNumber" placeholder="Phone Number" required />

          <label class = "label_ea" for="email">Email</label>
          <input class = "ea" type="email" v-model="form.email" id="email" placeholder="Email" required />

          <label class = "label_ny" for="nationality">Nationality</label>
          <input class = "ny" type="text" v-model="form.nationality" id="nationality" placeholder="Nationality" required />

          <label class = "label_ht" for="homeTown">Home Town</label>
          <input  class = "ht" type="password" v-model="form.homeTown" id="homeTown" placeholder="Home Town" required />

          <label class = "label_ha" for="homeAddress">Home Address</label>
          <input class = "ha" type="text" v-model="form.homeAddress" id="homeAddress" placeholder="Home Address" required />

          <button type="button" @click="nextStep">Next</button>
        </div>


        <div v-if="step === 2">

          <h2 class = "step2_first_h2"> Professional Background</h2>

          <label class = "label_auw" for="auw">Are you working</label>
          <select class = "auw" v-model="form.working" id="auw"  required>
            <option disabled value="">Select Working Status</option>
            <option v-for="work in working" :key="work" :value="work">
              {{ work }}
            </option>
          </select>

          <label class = "label_op" for="occupation">Occupation</label>
          <input class = "op" type="text" v-model="form.occupation" id="occupation" placeholder="Occupation" required />

          <label class = "label_qf" for="qualification">Qualification</label>
          <input class = "qf" type="text" v-model="form.qualification" id="qualification" placeholder="Qualification" required />

          <label class = "label_in" for="institutionName">Institution Name</label>
          <input  class = "in" type="text" v-model="form.institutionName" id="institutionName" placeholder="Institution Name" required />

          <h2 class = "step2_second_h2" >Family & Emergency Contact Information</h2>

          <label class = "label_man" for="dob">Mothers Name</label>
          <input class = "man" type="text" v-model="form.mothersName" id="mothersName" placeholder="Mothers name" required />

          <label class = "label_fan" for="fathersName">Fathers Name</label>
          <input class = "fan" type="text" v-model="form.fathersName" id="fathersName" placeholder="Fathers name" required />

          <label class = "label_nok" for="nextOfKin">Next of kin</label>
          <input class = "nok" type="text" v-model="form.nextOfKin" id="nextOfKin" placeholder="Next of kin" required />

          <label class = "label_nokp" for="nextOfKinPhone">Next Of Kin Phone</label>
          <input class = "nokp" type="text" v-model="form.nextOfKinPhone" id="nextOfKinPhone" placeholder="Next Of Kin Phone" required />

          
          <button class = "s2preveBut" type="button" @click="prevStep">Previous</button>
          <button class = "s2nextBut" type="button" @click="nextStep">Next</button>
        </div>

        <div v-if="step === 3">

          <h2 class = "step3_first_h2"> Family & Emergency Contact Information 2</h2>

          <label class = "label_mariSta" for="maritalStatus">Marital Status</label>
          <select class = "mariSta" v-model="form.maritalStatus" id="maritalStatus"  required>
            <option disabled value="">Select Marital Status</option>
            <option v-for= "marital in maritalS" :key="marital" :value="marital">
              {{ marital }}
            </option>
          </select>

          <label class = "label_spcon" for="spouseContact">Spouse contact</label>
          <input class = "spcon" type="text" v-model="form.spouseContact" id="spouseContact" placeholder="Spouse Contact" required />

          <label class = "label_spnam" for="spouseName">Spouse Name </label>
          <input class = "spnam" type="text" v-model="form.spouseName" id="spouseName" placeholder="Spouse Name" required />

          <label class = "label_noch" for="numberOfChildren">Number of children</label>
          <input  class = "noch" type="text" v-model="form.numberOfChildren" id="numberOfChildren" placeholder="Number of children" required />

          <h2 class = "step3_second_h2" > Church Details </h2>

          <label class = "label_meT" for="memeberType">Member Type</label>
          <select class = "meT" v-model="form.memberType" id="memberType"  required>
            <option disabled value="">Select Member Type</option>
            <option v-for="member in memberT" :key="member" :value="member">
              {{ member }}
            </option>
          </select>

          <label class = "label_zone" for="zone">Zone</label>
          <select class = "zone" v-model="form.zone" id="zone"  required>
            <option disabled value="">Select Zone</option>
            <option v-for="zone in zones" :key="zone" :value="zone">
              {{ zone }}
            </option>
          </select>

          <label class = "label_dapNa" for="departmentName">Department name</label>
          <input class = "dapNa" type="text" v-model="form.departmentName" id="departmentName" placeholder="DepartmentName" required />

          <label class = "label_datJo" for="datejoined">DateJoined</label>
          <input class = "datJo" type="date" v-model="form.dateJoined" id="dateJoined" placeholder="dateJoined" required />

          <label class = "label_claSelec" for="classSelection">Class Selection</label>
          <select class = "claSelec" v-model="form.classSelection" id="classSelection"  required>
            <option disabled value="">Select Class Selection</option>
            <option v-for="classsel in classsels" :key="classsel" :value="classsel">
              {{ classsel }}
            </option>
          </select>
          
          <button class = "s3preveBut" type="button" @click="prevStep">Previous</button>
          <button class = "s3nextBut" type="button" @click="nextStep">Next</button>

        </div>

        <div v-if="step === 4">

          <h2 class = "step4_first_h2"> Church Details 2</h2>

          <label class = "label_spGi" for="spiritualGift">Spiritual Gift(s)</label>
          <input class = "spGi" type="text" v-model="form.spiritualGift" id="spiritualGift" placeholder="Spiritual Gift" required />

          <label class = "label_posi" for="position">Position</label>
          <select class = "posi" v-model="form.position" id="position"  required>
            <option disabled value="">Select Position</option>
            <option v-for="position in positions" :key="position" :value="position">
              {{ position }}
            </option>
          </select>

          <label class = "label_waterBa" for="waterBa">Water Baptised</label>
          <select class = "waterBa" v-model="form.waterBaptised" id="waterBaptised"  required>
            <option disabled value="">Select option</option>
            <option v-for="waterBap in waterBaps" :key="waterBap" :value="waterBap">
              {{ waterBap }}
            </option>
          </select>

          <label class = "label_batby" for="baptisedBy">Babtised By </label>
          <input class = "batby" type="text" v-model="form.baptisedBy" id="baptisedBy" placeholder="Baptised By" required />

          <label class = "label_dateBapt" for="dateBaptised">Date Baptised</label>
          <input  class = "dateBapt" type="date" v-model="form.dateBaptised" id="dateBaptised" placeholder="Date Baptised" required />

          <label class = "label_bbths" for="bbths">Baptised by the Holy Spirit</label>
          <select class = "bbths" v-model="form.baptisedBy" id="bbths"  required>
            <option disabled value="">Select option</option>
            <option v-for="baptisedBy in baptisedBys" :key="baptisedBy" :value="baptisedBy">
              {{ baptisedBy }}
            </option>
          </select>

          <label class = "label_memberSta" for="memeberStatus">Member Status </label>
          <select class = "memberSta" v-model="form.memberStatus " id="memberStatus"  required>
            <option disabled value="">Select Member Status</option>
            <option v-for="memberSta in memberStatuses" :key="memberSta" :value="memberSta">
              {{ memberSta }}
            </option>
          </select>


          
          <button class = "s4preveBut" type="button" @click="prevStep">Previous</button>
          <button class = "s4nextBut" type="button" @click="nextStep">Next</button>

        </div>
        <div v-if="step === 5">

          <h2 class = "step5_first_h2"> Other Info</h2>

          <label class = "label_datDece" for="dateDeceased">Date Deceased</label>
          <input class = "datDece" type="date" v-model="form.dateDeceased" id="dateDeceased" placeholder="DateDeceased" required />

          <label class = "label_datBur" for="dateBuried">Date Buried</label>
          <input class = "datBur" type="date" v-model="form.dateBuried" id="dateburied" placeholder="Date Buried" required />

          <label class = "label_confirm" for="confirmed">Confirmed</label>
          <select class = "confirm" v-model="form.confirmed" id="confirmed"  required>
            <option disabled value="">Select confirmed</option>
            <option v-for="confirmed in confirmeds" :key="confirmed" :value="confirmed">
              {{ confirmed }}
            </option>
          </select>

          <label class = "label_dateConfir" for="dateConfirmed">Date Confirmed</label>
          <input class = "dateConfir" type="date" v-model="form.dateConfirmed" id="dateConfirmed" placeholder="Date Comfired" required />

          <label class = "label_comment" for="comment">Comment</label>
          <textarea class="comment" v-model="form.comment" id="comment" placeholder="Write your comment here..." required></textarea>

         
          <input class = "label_image" type="file" @change="handleImageUpload" />
          <div class = "image_container">
          <img  v-if="imageUrl" :src="imageUrl" alt="Image Preview" class="images" />
          </div>

          <button class = "s5nextBut" type="button" @click="prevStep">Previous</button>
          <button class = "s5resetBut" type="button" @click="nextStep">Reset</button>
          <button class = "s5SaveBut" type="submit">Submit</button>

        </div>

        <div v-if="step === 6">

        </div>
      </form>

      <div class="progress-bar">
        <div :style="{ width: (step - 1) * 33 + '%' }" class="progress"></div>
      </div>
    </div>
  </div>
</template>


<script>
import axios from 'axios';

export default {
  name: 'RegisterationPage'
  ,
  data() {
    return {
      firstname: '',
      lastname: '',
      email: '',
      phoneNumber: '',
      password: '',
      confirmPassword: '',
      role: '',
      previllages: [],

    };
  },
  computed: {
    // Check if password and confirmPassword match
    passwordMismatch() {
      return this.password && this.confirmPassword && this.password !== this.confirmPassword;
    },
    // Validate if all fields are filled and passwords match
    isFormValid() {
      return (
        this.firstname &&
        this.lastname &&
        this.email &&
        this.phoneNumber &&
        this.password &&
        this.confirmPassword &&
        this.role &&
        !this.passwordMismatch
      );
    }
  },
  methods: {
    async register() {
      if (this.isFormValid) {
        // Prepare data payload for backend
        const payload = {
          firstname: this.firstname,
          lastname: this.lastname,
          email: this.email,
          phoneNumber: this.phoneNumber,
          password: this.password,
          role: this.role
        };

        try {
          const response = await axios.post('https://churchmsbackend.onrender.com/auth/create_user', {
            firstname: this.firstname,
            lastname: this.lastname,
            email: this.email,
            phoneNumber: this.phoneNumber,
            password: this.password,
            role: this.role
          });

          console.info(response)
          if (response.data.message === 'User registeration successfully') {
            // Save token if your backend sends one for future authenticated requests
            
            this.$router.push('/login'); // Navigate to home page upon successful login
          } else {
            alert(response);
          }
      } catch (error) {
        console.error("Registeration error:", error);
        alert("An error occurred during registeration. Please try again.");
      }
        // Send the payload to the backend registration endpoint
        // axios.post('your-backend-endpoint', payload)
        // .then(response => {
        //   // Handle success, maybe redirect to a login or home page
        // })
        // .catch(error => {
        //   // Handle error
        // });
        console.log("Form is valid. Proceeding with registration...", payload);
      } else {
        console.log("Form is invalid");
      }
    }
  }
};
</script>












<template>
<router-view></router-view>
<div class = "register-B">
  <div class="container">
    <!-- Title section -->
    <div class="title">Registration</div>
    <div class="content">
      <!-- Registration form -->

      <form @submit.prevent="register" action="#">

        <div class="user-details">

          <!-- Input for First Name -->
          <div class="input-box">
            <span class="details">First Name</span>
            <input type="text" v-model="firstname" placeholder="Enter your first name" required>
          </div>

          <!-- Input for Last name -->
          <div class="input-box">
            <span class="details"> Last name</span>
            <input type="text"  v-model="lastname" placeholder="Enter your last name" required>
          </div>

          <!-- Input for Email -->
          <div class="input-box">
            <span class="details">Email</span>
            <input type="text" v-model="email"  placeholder="Enter your email" required>
          </div>

          <!-- Input for Phone Number -->
          <div class="input-box">
            <span class="details">Phone Number</span>
            <input type="text" v-model="phoneNumber" placeholder="Enter your number" required>
          </div>

          <!-- Input for Password -->
          <div class="input-box">
            <span class="details">Password</span>
            <input type="password" v-model="password" placeholder="Enter your password" required>
          </div>

          <!-- Input for Confirm Password -->
          <div class="input-box">
            <span class="details">Confirm Password</span>
            <input type="password" v-model="confirmPassword" placeholder="Confirm your password" required>
          </div>
          
          <p v-if="passwordMismatch" class="error">Passwords do not match</p>
        </div>

        <div class="gender-details">

          <!-- Radio buttons for gender selection -->
          <input type="radio" v-model="role" name="gender" value="ADMIN" id="dot-1">
          <input type="radio" v-model="role" name="gender" value="USER" id="dot-2">

          <span class="gender-title">Role</span>

          <div class="category">
            <!-- Label for Admin -->
            <label for="dot-1">
              <span class="dot one"></span>
              <span class="gender">Admin</span>
            </label>
            <!-- Label for  User -->
            <label for="dot-2">
              <span class="dot two"></span>
              <span class="gender">User</span>
            </label>
            
            
          </div>
        </div>
        <!-- Submit button -->
        <div class="button">
          <input type="submit" value="Register" :disabled="!isFormValid">
        </div>

        <router-link to="/" >
        <i> Back</i>
        </router-link>
      </form>
    </div>
  </div>
</div>
</template>




title : str
    firstname : str
    middlename : str
    lastname : str
    dateOfBirth : str
    gender : str
    phoneNumber : str
    email : str
    nationality :str
    homeTown :str
    homeAddress : str
    workingStatus : str
    occupation : str
    qualification : str
    institutionName : str
    mothersName :str
    fathersName :str
    nextOfKin :str
    nextOfKinPhoneNumber :str
    maritalStatus :str
    spouseContact :str
    spouseName :str
    numberOfChildren :str
    memberType :str
    cell :str
    departmentName :str
    dateJoined :str
    classSelection :str
    spiritualGift :str
    position :str
    waterBaptised :str
    baptisedBy :str
    dateBaptised :str
    baptisedByTheHolySpirit :str
    memberStatus :str
    dateDeceased :str
    dateBuried :str
    confirmed :str
    dateConfirmed :str
    comment :str
    






    - Add members
- create users
Get user details
- take attemdamce
- get attandance overview
- Get member details






created_on
: 
"2024-11-13"
email
: 
"ada@gmail.com"
firstname
: 
"ama"
id
: 
"88cfb123-b767-4ea1-a87d-2dc53b2fcba3"
lastLogedin
: 
"NOT_SET"
lastname
: 
"ada"
password
: 
"$2b$12$UjMvoLmk6pE4YGsbog3IbuDvvH9SzQAix96I4nUiajywMHe5a7a1a"
phoneNumber
: 
"0235788967"
privileges
: 
"Add members,Take Attendance"
role
: 
"DATA CLERK"
[[Prototype]]
: 
Object




table {
  width: 60%;
  border-collapse: collapse;
  position: fixed;
  top: 160px;
  left:280px;
}
table, th, td {
  
  border: 1px solid #ccc;
}

th, td {
  
  padding: 10px;
  text-align: center;
}
  
th {
  background-color: #f2f2f2;
  width: 700px;
}




table {
  width: 70%;
  border-collapse: collapse;
  position: fixed;
  top: 300px;
  left:300px;
}

table, th, td {
  
  border: 1px solid #ccc;
}

th, td {
  
  padding: 10px;
  text-align: center;
}

th {
  background-color: #f2f2f2;
  width: 700px;
}